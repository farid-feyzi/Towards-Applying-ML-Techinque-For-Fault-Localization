Closure-51.buggy.lines	com/google/javascript/jscomp/CodeConsumer.java#241#    if ((long) x == x) {
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#101#    if (n.isExprResult()) {
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#113#    if (parent.getType() == Token.COMMA) {
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#114#      if (isResultUsed) {
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#115#        return;
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#116#      }
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#117#      if (n == parent.getLastChild()) {
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#118#        for (Node an : parent.getAncestors()) {
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#119#          int ancestorType = an.getType();
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#120#          if (ancestorType == Token.COMMA) continue;
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#121#          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK) return;
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#122#          else break;
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#123#        }
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#124#      }
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#125#    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#126#      if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#127#        return;
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#128#      }
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#129#    }
Closure-21.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#130#    if (
Closure-102.buggy.lines	com/google/javascript/jscomp/Normalize.java#94#    removeDuplicateDeclarations(root);
Closure-82.buggy.lines	com/google/javascript/rhino/jstype/JSType.java#163#    return isNoType() || isNoObjectType() || isNoResolvedType();
Closure-13.buggy.lines	com/google/javascript/jscomp/PeepholeOptimizationsPass.java#126#        traverse(c);
Closure-63.buggy.lines	com/google/javascript/jscomp/LightweightMessageFormatter.java#98#          && 0 <= charno && charno < sourceExcerpt.length()) {
Closure-130.buggy.lines	com/google/javascript/jscomp/CollapseProperties.java#172#      if (name.globalSets == 1 && name.localSets == 0 &&
Closure-125.buggy.lines	com/google/javascript/jscomp/TypeCheck.java#1661#      if (fnType != null) {
Closure-76.buggy.lines	com/google/javascript/jscomp/DeadAssignmentsElimination.java#309#            if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {
Closure-76.buggy.lines	com/google/javascript/jscomp/DeadAssignmentsElimination.java#317#            }
Closure-76.buggy.lines	com/google/javascript/jscomp/DeadAssignmentsElimination.java#318#          }
Closure-76.buggy.lines	com/google/javascript/jscomp/DeadAssignmentsElimination.java#319#      }
Closure-76.buggy.lines	com/google/javascript/jscomp/DeadAssignmentsElimination.java#372#          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
Closure-76.buggy.lines	com/google/javascript/jscomp/DeadAssignmentsElimination.java#378#      }
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#756#    JSType type = getJSType(n);
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#757#    if (dereference) {
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#758#      ObjectType dereferenced = type.dereference();
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#759#      if (dereferenced != null) {
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#760#        type = dereferenced;
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#761#      }
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#762#    }
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#763#    if (type.isFunctionPrototypeType() ||
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#764#        (type.toObjectType() != null &&
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#765#         type.toObjectType().getConstructor() != null)) {
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#766#      return type.toString();
Closure-117.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#767#    }
Closure-97.buggy.lines	com/google/javascript/jscomp/PeepholeFoldConstants.java#698#          result = lvalInt >>> rvalInt;
Closure-7.buggy.lines	com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java#613#        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
Closure-34.buggy.lines	com/google/javascript/jscomp/CodeGenerator.java#122#        addExpr(first, p, context);
Closure-34.buggy.lines	com/google/javascript/jscomp/CodeGenerator.java#123#        cc.addOp(opstr, true);
Closure-34.buggy.lines	com/google/javascript/jscomp/CodeGenerator.java#124#        addExpr(last, p + 1, rhsContext);
Closure-34.buggy.lines	com/google/javascript/jscomp/CodeGenerator.java#754#      cc.listSeparator();
Closure-34.buggy.lines	com/google/javascript/jscomp/CodePrinter.java#334#        if (getLastChar() != ' ') {
Closure-73.buggy.lines	com/google/javascript/jscomp/CodeGenerator.java#1045#            if (c > 0x1f && c <= 0x7f) {
Closure-31.buggy.lines	com/google/javascript/jscomp/Compiler.java#1285#          !options.skipAllPasses &&
Closure-92.buggy.lines	com/google/javascript/jscomp/ProcessClosurePrimitives.java#789#          int indexOfDot = namespace.indexOf('.');
Closure-112.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1192#    Map<TemplateType, JSType> inferred = 
Closure-112.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1193#        inferTemplateTypesFromParameters(fnType, n);
Closure-87.buggy.lines	com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java#533#          return NodeUtil.isExpressionNode(maybeExpr);
Closure-24.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#278#        if (parent.isVar()) {
Closure-24.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#279#          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
Closure-24.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#294#        }
Closure-54.buggy.lines	com/google/javascript/jscomp/TypedScopeCreator.java#1413#          if (!qVar.isTypeInferred()) {
Closure-54.buggy.lines	com/google/javascript/rhino/jstype/FunctionType.java#341#        baseType.isUnknownType() ||
Closure-54.buggy.lines	com/google/javascript/rhino/jstype/FunctionType.java#366#    boolean replacedPrototype = prototype != null;
Closure-48.buggy.lines	com/google/javascript/jscomp/TypedScopeCreator.java#1521#      if (inferred) {
Closure-48.buggy.lines	com/google/javascript/jscomp/TypedScopeCreator.java#1523#        inferred = !(rhsValue != null &&
Closure-48.buggy.lines	com/google/javascript/jscomp/TypedScopeCreator.java#1524#            rhsValue.isFunction() &&
Closure-48.buggy.lines	com/google/javascript/jscomp/TypedScopeCreator.java#1525#            (info != null || !scope.isDeclared(qName, false)));
Closure-38.buggy.lines	com/google/javascript/jscomp/CodeConsumer.java#245#    if (x < 0 && prev == '-') {
Closure-16.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#172#    AliasedTypeNode(Node typeReference,
Closure-16.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#180#      typeReference.setString(aliasName);
Closure-16.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#468#          aliasUsages.add(new AliasedTypeNode(typeNode, aliasedNode.getQualifiedName() + name.substring(endIndex)));
Closure-65.buggy.lines	com/google/javascript/jscomp/CodeGenerator.java#1015#        case '\0': sb.append("\\0"); break;
Closure-27.buggy.lines	com/google/javascript/rhino/IR.java#224#    Preconditions.checkState(tryBody.isLabelName());
Closure-27.buggy.lines	com/google/javascript/rhino/IR.java#225#    Preconditions.checkState(finallyBody.isLabelName());
Closure-27.buggy.lines	com/google/javascript/rhino/IR.java#233#    Node catchBody = block(catchNode).copyInformationFrom(catchNode);
Closure-57.buggy.lines	com/google/javascript/jscomp/ClosureCodingConvention.java#197#          if (target != null) {
Closure-104.buggy.lines	com/google/javascript/rhino/jstype/UnionType.java#291#    if (result != null) {
Closure-79.buggy.lines	com/google/javascript/jscomp/Normalize.java#122#        .traverse(root);
Closure-111.buggy.lines	com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java#54#          return topType;
Closure-32.buggy.lines	com/google/javascript/jscomp/parsing/JsDocInfoParser.java#1414#          if (builder.length() > 0) {
Closure-32.buggy.lines	com/google/javascript/jscomp/parsing/JsDocInfoParser.java#1415#            builder.append(' ');
Closure-32.buggy.lines	com/google/javascript/jscomp/parsing/JsDocInfoParser.java#1416#          }
Closure-123.buggy.lines	com/google/javascript/jscomp/CodeGenerator.java#285#        Context rhsContext = Context.OTHER;
Closure-70.buggy.lines	com/google/javascript/jscomp/TypedScopeCreator.java#1745#                  jsDocParameter.getJSType(), true);
Closure-47.buggy.lines	com/google/javascript/jscomp/SourceMap.java#141#        new FilePosition(node.getLineno(), node.getCharno()),
Closure-47.buggy.lines	com/google/debugging/sourcemap/SourceMapConsumerV3.java#489#        .setLineNumber(entry.getSourceLine())
Closure-47.buggy.lines	com/google/debugging/sourcemap/SourceMapConsumerV3.java#490#        .setColumnPosition(entry.getSourceColumn());
Closure-37.buggy.lines	com/google/javascript/jscomp/NodeTraversal.java#541#            body.isBlock());
Closure-114.buggy.lines	com/google/javascript/jscomp/NameAnalyzer.java#578#        } else {
Closure-4.buggy.lines	com/google/javascript/rhino/jstype/NamedType.java#190#    if (detectImplicitPrototypeCycle()) {
Closure-4.buggy.lines	com/google/javascript/rhino/jstype/NamedType.java#202#    if (detectImplicitPrototypeCycle()) {
Closure-75.buggy.lines	com/google/javascript/jscomp/NodeUtil.java#375#        return TernaryValue.TRUE;
Closure-108.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#581#        if (info != null) {
Closure-126.buggy.lines	com/google/javascript/jscomp/MinimizeExitPoints.java#141#      if (NodeUtil.hasFinally(n)) {
Closure-126.buggy.lines	com/google/javascript/jscomp/MinimizeExitPoints.java#142#        Node finallyBlock = n.getLastChild();
Closure-126.buggy.lines	com/google/javascript/jscomp/MinimizeExitPoints.java#143#        tryMinimizeExits(finallyBlock, exitType, labelName);
Closure-126.buggy.lines	com/google/javascript/jscomp/MinimizeExitPoints.java#144#      }
Closure-10.buggy.lines	com/google/javascript/jscomp/NodeUtil.java#1417#      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
Closure-101.buggy.lines	com/google/javascript/jscomp/CommandLineRunner.java#433#    if (flags.process_closure_primitives) {
Closure-101.buggy.lines	com/google/javascript/jscomp/CommandLineRunner.java#434#      options.closurePass = true;
Closure-101.buggy.lines	com/google/javascript/jscomp/CommandLineRunner.java#435#    }
Closure-52.buggy.lines	com/google/javascript/jscomp/CodeGenerator.java#745#    return len > 0;
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#101#    if (parent.getType() == Token.COMMA) {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#102#      Node gramps = parent.getParent();
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#103#      if (gramps.isCall() && parent == gramps.getFirstChild()) {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#104#        if (n == parent.getFirstChild() && parent.getChildCount() == 2 && n.getNext().isName() && "eval".equals(n.getNext().getString())) {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#106#        }
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#111#      if (n == parent.getLastChild()) {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#112#        for (Node an : parent.getAncestors()) {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#113#          int ancestorType = an.getType();
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#114#          if (ancestorType == Token.COMMA)
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#115#            continue;
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#116#          if (ancestorType != Token.EXPR_RESULT && ancestorType != Token.BLOCK)
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#117#            return;
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#118#          else
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#119#            break;
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#120#        }
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#121#      }
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#122#    } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#123#      if (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() ||
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#124#           n == parent.getFirstChild().getNext().getNext())) {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#125#      } else {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#127#      }
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#134#      if (n.isQualifiedName() && n.getJSDocInfo() != null) {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#135#        return;
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#136#      } else if (n.isExprResult()) {
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#137#        return;
Closure-22.buggy.lines	com/google/javascript/jscomp/CheckSideEffects.java#138#      }
Closure-39.buggy.lines	com/google/javascript/rhino/jstype/PrototypeObjectType.java#380#        sb.append(getPropertyType(property).toString());
Closure-39.buggy.lines	com/google/javascript/rhino/jstype/PrototypeObjectType.java#383#        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
Closure-39.buggy.lines	com/google/javascript/rhino/jstype/PrototypeObjectType.java#394#      return "{...}";
Closure-49.buggy.lines	com/google/javascript/jscomp/MakeDeclaredNamesUnique.java#91#    if (declarationRoot.getType() == Token.FUNCTION) {
Closure-49.buggy.lines	com/google/javascript/jscomp/MakeDeclaredNamesUnique.java#92#      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {
Closure-49.buggy.lines	com/google/javascript/jscomp/MakeDeclaredNamesUnique.java#93#        String name = c.getString();
Closure-49.buggy.lines	com/google/javascript/jscomp/MakeDeclaredNamesUnique.java#94#        renamer.addDeclaredName(name);
Closure-49.buggy.lines	com/google/javascript/jscomp/MakeDeclaredNamesUnique.java#95#      }
Closure-49.buggy.lines	com/google/javascript/jscomp/MakeDeclaredNamesUnique.java#96#      Node functionBody = declarationRoot.getLastChild();
Closure-49.buggy.lines	com/google/javascript/jscomp/MakeDeclaredNamesUnique.java#97#      findDeclaredNames(functionBody, null, renamer);
Closure-49.buggy.lines	com/google/javascript/jscomp/MakeDeclaredNamesUnique.java#98#    }  else 
Closure-17.buggy.lines	com/google/javascript/jscomp/TypedScopeCreator.java#1291#              if (rValue.getJSType() != null && !rValue.getJSType().isUnknownType()) {
Closure-67.buggy.lines	com/google/javascript/jscomp/AnalyzePrototypeProperties.java#318#          ) {
Closure-106.buggy.lines	com/google/javascript/rhino/JSDocInfoBuilder.java#189#    if (parseDocumentation) {
Closure-106.buggy.lines	com/google/javascript/rhino/JSDocInfoBuilder.java#191#    }
Closure-86.buggy.lines	com/google/javascript/jscomp/NodeUtil.java#2465#        return true;
Closure-55.buggy.lines	com/google/javascript/jscomp/FunctionRewriter.java#117#    return NodeUtil.isFunctionExpression(n);
Closure-128.buggy.lines	com/google/javascript/jscomp/CodeGenerator.java#791#    return len > 0 && s.charAt(0) != '0';
Closure-25.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1038#    scope = traverse(constructor, scope);
Closure-25.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1059#    for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
Closure-25.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1060#      scope = traverse(arg, scope);
Closure-25.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1061#    }
Closure-40.buggy.lines	com/google/javascript/jscomp/NameAnalyzer.java#635#          JsName name = getName(ns.name, false);
Closure-40.buggy.lines	com/google/javascript/jscomp/NameAnalyzer.java#636#          if (name != null) {
Closure-40.buggy.lines	com/google/javascript/jscomp/NameAnalyzer.java#639#          }
Closure-30.buggy.lines	com/google/javascript/jscomp/MustBeReachingVariableDef.java#396#        if (n.isName() && jsScope.isDeclared(n.getString(), true)) {
Closure-30.buggy.lines	com/google/javascript/jscomp/FlowSensitiveInlineVariables.java#157#    (new NodeTraversal(compiler, this)).traverse(root);
Closure-113.buggy.lines	com/google/javascript/jscomp/ProcessClosurePrimitives.java#329#      if (provided != null) {
Closure-93.buggy.lines	com/google/javascript/jscomp/ProcessClosurePrimitives.java#789#          int indexOfDot = namespace.indexOf('.');
Closure-3.buggy.lines	com/google/javascript/jscomp/FlowSensitiveInlineVariables.java#155#      if (c.canInline()) {
Closure-3.buggy.lines	com/google/javascript/jscomp/FlowSensitiveInlineVariables.java#280#    private boolean canInline() {
Closure-72.buggy.lines	com/google/javascript/jscomp/RenameLabels.java#215#      if (li.referenced) {
Closure-121.buggy.lines	com/google/javascript/jscomp/InlineVariables.java#304#          referenceInfo.isAssignedOnceInLifetime()) {
Closure-6.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#366#      if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
Closure-6.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#367#        registerMismatch(rightType, leftType, null);
Closure-6.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#368#      } else {
Closure-6.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#385#      }
Closure-6.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#405#      if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
Closure-6.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#406#        registerMismatch(rightType, leftType, null);
Closure-6.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#407#      } else {
Closure-6.buggy.lines	com/google/javascript/jscomp/TypeValidator.java#409#      }
Closure-96.buggy.lines	com/google/javascript/jscomp/TypeCheck.java#1409#           parameters.hasNext()) {
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1121#    if (constraintObj != null && constraintObj.isRecordType()) {
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1122#      ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1123#      if (objType != null) {
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1124#        for (String prop : constraintObj.getOwnPropertyNames()) {
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1125#          JSType propType = constraintObj.getPropertyType(prop);
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1126#          if (!objType.isPropertyTypeDeclared(prop)) {
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1127#            JSType typeToInfer = propType;
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1128#            if (!objType.hasProperty(prop)) {
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1129#              typeToInfer =
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1130#                  getNativeType(VOID_TYPE).getLeastSupertype(propType);
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1131#            }
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1132#            objType.defineInferredProperty(prop, typeToInfer, null);
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1133#          }
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1134#        }
Closure-35.buggy.lines	com/google/javascript/jscomp/TypeInference.java#1135#      }
Closure-45.buggy.lines	com/google/javascript/jscomp/RemoveUnusedVars.java#741#          if (assignedToUnknownValue && hasPropertyAssign) {
Closure-45.buggy.lines	com/google/javascript/jscomp/RemoveUnusedVars.java#904#      this.maybeAliased = !assignNode.getParent().isExprResult();
Closure-59.buggy.lines	com/google/javascript/jscomp/Compiler.java#255#    if (options.checkGlobalThisLevel.isOn()) {
Closure-62.buggy.lines	com/google/javascript/jscomp/LightweightMessageFormatter.java#98#          && 0 <= charno && charno < sourceExcerpt.length()) {
Closure-131.buggy.lines	com/google/javascript/rhino/TokenStream.java#199#        if (
Closure-20.buggy.lines	com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java#220#      if (value != null) {
Closure-50.buggy.lines	com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java#376#      if (!NodeUtil.isImmutableValue(right)) {
Closure-83.buggy.lines	com/google/javascript/jscomp/CommandLineRunner.java#334#        String param = params.getParameter(0);
Closure-100.buggy.lines	com/google/javascript/jscomp/CheckGlobalThis.java#146#    return false;
Closure-23.buggy.lines	com/google/javascript/jscomp/PeepholeFoldConstants.java#1451#    for (int i = 0; current != null && i < intIndex; i++) {
Closure-132.buggy.lines	com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java#782#              !mayEffectMutableState(lhs)) {
Closure-11.buggy.lines	com/google/javascript/jscomp/TypeCheck.java#1314#    } else if (n.getJSType() != null && parent.isAssign()) {
Closure-11.buggy.lines	com/google/javascript/jscomp/TypeCheck.java#1315#      return;
Closure-89.buggy.lines	com/google/javascript/jscomp/GlobalNamespace.java#920#      if (type != Type.FUNCTION && aliasingGets > 0) {
Closure-109.buggy.lines	com/google/javascript/jscomp/parsing/JsDocInfoParser.java#1908#          return parseTypeName(token);
Closure-74.buggy.lines	com/google/javascript/jscomp/PeepholeFoldConstants.java#907#    int lhType = left.getType();
Closure-74.buggy.lines	com/google/javascript/jscomp/PeepholeFoldConstants.java#908#    int rhType = right.getType();
Closure-127.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#170#            if (nextCfgNode == fallThrough) {
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#140#  @Override
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#141#  public JSType getLeastSupertype(JSType that) {
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#142#    if (!that.isRecordType()) {
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#143#      return super.getLeastSupertype(that);
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#144#    }
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#145#    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#146#    for (String property : properties.keySet()) {
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#147#      if (that.toMaybeRecordType().hasProperty(property) &&
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#148#          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#149#              getPropertyType(property))) {
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#150#        builder.addProperty(property, getPropertyType(property),
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#151#            getPropertyNode(property));
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#152#      }
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#153#    }
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#154#    return builder.build();
Closure-46.buggy.lines	com/google/javascript/rhino/jstype/RecordType.java#155#  }
Closure-18.buggy.lines	com/google/javascript/jscomp/Compiler.java#1288#      if (options.dependencyOptions.needsManagement() && options.closurePass) {
Closure-68.buggy.lines	com/google/javascript/jscomp/parsing/JsDocInfoParser.java#870#                  }
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#697#    boolean hasSideEffects = false;
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#698#    if (block.hasChildren()) {
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#699#      Preconditions.checkState(block.hasOneChild());
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#700#      Node stmt = block.getFirstChild();
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#701#      if (stmt.isReturn()) {
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#702#        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#703#      }
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#704#    }
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#730#          if (hasSideEffects && NodeUtil.canBeSideEffected(cArg)) {
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#731#            return CanInlineResult.NO;
Closure-115.buggy.lines	com/google/javascript/jscomp/FunctionInjector.java#732#          }
Closure-122.buggy.lines	com/google/javascript/jscomp/parsing/IRFactory.java#252#    if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
Closure-71.buggy.lines	com/google/javascript/jscomp/CheckAccessControls.java#416#      boolean isOverride = t.inGlobalScope() &&
Closure-90.buggy.lines	com/google/javascript/jscomp/FunctionTypeBuilder.java#184#      if (!type.isSubtype(
Closure-110.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#366#        } else if (isVar) {
Closure-110.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#368#          Node value = n.hasChildren() ?
Closure-110.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#369#              v.getInitialValue().detachFromParent() :
Closure-110.buggy.lines	com/google/javascript/jscomp/ScopedAliases.java#371#          Node varNode = parent;
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#153#    if (n.getParent() == null) {
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#154#      List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges();
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#155#      if (outEdges.size() == 1) {
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#156#        return tryRemoveUnconditionalBranching(outEdges.get(0).getDestination().getValue());
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#157#      }
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#158#    }
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#160#      case Token.BLOCK:
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#161#        if (n.hasChildren()) {
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#162#          Node first = n.getFirstChild();
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#163#          return tryRemoveUnconditionalBranching(first);
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#164#        } else {
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#165#          return tryRemoveUnconditionalBranching(ControlFlowAnalysis.computeFollowNode(n));
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#166#        }
Closure-85.buggy.lines	com/google/javascript/jscomp/UnreachableCodeElimination.java#183#          Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n));
Closure-78.buggy.lines	com/google/javascript/jscomp/PeepholeFoldConstants.java#711#          error(DiagnosticType.error("JSC_DIVIDE_BY_0_ERROR", "Divide by 0"), right);
Closure-78.buggy.lines	com/google/javascript/jscomp/PeepholeFoldConstants.java#718#          error(DiagnosticType.error("JSC_DIVIDE_BY_0_ERROR", "Divide by 0"), right);
Closure-105.buggy.lines	com/google/javascript/jscomp/FoldConstants.java#1477#    StringBuilder sb = new StringBuilder();
Closure-105.buggy.lines	com/google/javascript/jscomp/FoldConstants.java#1483#        if (sb.length() > 0) {
Closure-105.buggy.lines	com/google/javascript/jscomp/FoldConstants.java#1488#        if (sb.length() > 0) {
Closure-105.buggy.lines	com/google/javascript/jscomp/FoldConstants.java#1492#          sb = new StringBuilder();
Closure-105.buggy.lines	com/google/javascript/jscomp/FoldConstants.java#1500#    if (sb.length() > 0) {
Closure-9.buggy.lines	com/google/javascript/jscomp/ProcessCommonJSModules.java#183#      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName()));
Closure-14.buggy.lines	com/google/javascript/jscomp/ControlFlowAnalysis.java#767#              cfa.createEdge(fromNode, Branch.UNCOND, finallyNode);
Closure-64.buggy.lines	com/google/javascript/jscomp/Compiler.java#1432#        String code = toSource(root, sourceMap);
Closure-64.buggy.lines	com/google/javascript/jscomp/Compiler.java#1461#    return toSource(n, null);
Closure-64.buggy.lines	com/google/javascript/jscomp/Compiler.java#1467#  private String toSource(Node n, SourceMap sourceMap) {
Closure-64.buggy.lines	com/google/javascript/jscomp/Compiler.java#1473#    builder.setTagAsStrict(
Closure-99.buggy.lines	com/google/javascript/jscomp/CheckGlobalThis.java#129#          if (lhs.getQualifiedName() != null && lhs.getQualifiedName().contains(".prototype.")) {
Chart-10.buggy.lines	org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java#65#        return " title=\"" + toolTipText
Chart-22.buggy.lines	org/jfree/data/KeyedObjects2D.java#231#        if (row >= 0) {
Chart-22.buggy.lines	org/jfree/data/KeyedObjects2D.java#233#            return rowData.getObject(columnKey);
Chart-22.buggy.lines	org/jfree/data/KeyedObjects2D.java#378#                rowData.removeValue(columnKey);
Chart-7.buggy.lines	org/jfree/data/time/TimePeriodValues.java#300#            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
Chart-7.buggy.lines	org/jfree/data/time/TimePeriodValues.java#302#            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
Chart-24.buggy.lines	org/jfree/chart/renderer/GrayPaintScale.java#126#        int g = (int) ((value - this.lowerBound) / (this.upperBound 
Chart-16.buggy.lines	org/jfree/data/category/DefaultIntervalCategoryDataset.java#207#                this.seriesKeys = null;
Chart-16.buggy.lines	org/jfree/data/category/DefaultIntervalCategoryDataset.java#208#                this.categoryKeys = null;
Chart-16.buggy.lines	org/jfree/data/category/DefaultIntervalCategoryDataset.java#338#        if (categoryKeys.length != this.startData[0].length) {
Chart-1.buggy.lines	org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java#1797#        if (dataset != null) {
Chart-13.buggy.lines	org/jfree/chart/block/BorderArrangement.java#455#                    new Range(0.0, constraint.getWidth() - w[2]),
Chart-8.buggy.lines	org/jfree/data/time/Week.java#175#        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
Chart-6.buggy.lines	org/jfree/chart/util/ShapeList.java#111#        return super.equals(obj);
Chart-18.buggy.lines	org/jfree/data/DefaultKeyedValues.java#318#        if (index < this.keys.size()) {
Chart-18.buggy.lines	org/jfree/data/DefaultKeyedValues.java#320#        }
Chart-18.buggy.lines	org/jfree/data/DefaultKeyedValues.java#335#			return;
Chart-11.buggy.lines	org/jfree/chart/util/ShapeUtilities.java#275#        PathIterator iterator2 = p1.getPathIterator(null);
Chart-12.buggy.lines	org/jfree/chart/plot/MultiplePiePlot.java#145#        this.dataset = dataset;
Chart-9.buggy.lines	org/jfree/data/time/TimeSeries.java#944#        if (endIndex < 0) {
Chart-20.buggy.lines	org/jfree/chart/plot/ValueMarker.java#95#        super(paint, stroke, paint, stroke, alpha);
Chart-5.buggy.lines	org/jfree/data/xy/XYSeries.java#548#        if (index >= 0 && !this.allowDuplicateXValues) {
Chart-17.buggy.lines	org/jfree/data/time/TimeSeries.java#857#        Object clone = createCopy(0, getItemCount() - 1);
Chart-25.buggy.lines	org/jfree/chart/renderer/category/StatisticalBarRenderer.java#315#            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
Chart-25.buggy.lines	org/jfree/chart/renderer/category/StatisticalBarRenderer.java#459#            double valueDelta = dataset.getStdDevValue(row, column).doubleValue();
Math-81.buggy.lines	org/apache/commons/math/linear/EigenDecompositionImpl.java#905#                    for (int i = 4 * i0; i < 4 * n0 - 11; i += 4) {
Math-81.buggy.lines	org/apache/commons/math/linear/EigenDecompositionImpl.java#906#                        if ((work[i + 3] <= TOLERANCE_2 * work[i]) &&
Math-81.buggy.lines	org/apache/commons/math/linear/EigenDecompositionImpl.java#1543#                if (end - start > 2) {
Math-22.buggy.lines	org/apache/commons/math3/distribution/UniformRealDistribution.java#184#        return false;
Math-22.buggy.lines	org/apache/commons/math3/distribution/FDistribution.java#275#        return true;
Math-52.buggy.lines	org/apache/commons/math/geometry/euclidean/threed/Rotation.java#344#  if (c == 0) {
Math-52.buggy.lines	org/apache/commons/math/geometry/euclidean/threed/Rotation.java#353#    if (c == 0) {
Math-52.buggy.lines	org/apache/commons/math/geometry/euclidean/threed/Rotation.java#359#      if (c == 0) {
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#126#        try {
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#129#        } catch (MaxIterationsExceededException ex) {
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#130#            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#131#                return 0;
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#132#            } else if (x > (mean + 20 * standardDeviation)) {
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#133#                return 1;
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#134#            } else {
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#135#                throw ex;
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#136#            }
Math-60.buggy.lines	org/apache/commons/math/distribution/NormalDistributionImpl.java#137#        }
Math-88.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#336#            if (basicRow != null) {
Math-88.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#337#                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
Math-88.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#338#                    if (tableau.getEntry(basicRow, j) == 1) {
Math-88.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#339#                         coefficients[i] = 0;
Math-88.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#340#                    }
Math-88.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#341#                }
Math-75.buggy.lines	org/apache/commons/math/stat/Frequency.java#303#        return getCumPct((Comparable<?>) v);
Math-37.buggy.lines	org/apache/commons/math/complex/Complex.java#1018#        if (isNaN) {
Math-37.buggy.lines	org/apache/commons/math/complex/Complex.java#1063#        if (isNaN) {
Math-47.buggy.lines	org/apache/commons/math/complex/Complex.java#256#        if (divisor.getReal() == 0.0 && divisor.getImaginary() == 0.0) {
Math-47.buggy.lines	org/apache/commons/math/complex/Complex.java#257#            return NaN;
Math-47.buggy.lines	org/apache/commons/math/complex/Complex.java#293#            return NaN;
Math-69.buggy.lines	org/apache/commons/math/stat/correlation/PearsonsCorrelation.java#171#                    out[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
Math-94.buggy.lines	org/apache/commons/math/util/MathUtils.java#412#        if (u * v == 0) {
Math-70.buggy.lines	org/apache/commons/math/analysis/solvers/BisectionSolver.java#72#        return solve(min, max);
Math-91.buggy.lines	org/apache/commons/math/fraction/Fraction.java#259#        double nOd = doubleValue();
Math-91.buggy.lines	org/apache/commons/math/fraction/Fraction.java#260#        double dOn = object.doubleValue();
Math-42.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#413#          if (basicRows.contains(basicRow)) {
Math-32.buggy.lines	org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java#136#            if ((Boolean) tree.getAttribute()) {
Math-57.buggy.lines	org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java#175#            int sum = 0;
Math-27.buggy.lines	org/apache/commons/math3/fraction/Fraction.java#597#        return multiply(100).doubleValue();
Math-79.buggy.lines	org/apache/commons/math/util/MathUtils.java#1624#      int sum = 0;
Math-79.buggy.lines	org/apache/commons/math/util/MathUtils.java#1626#          final int dp = p1[i] - p2[i];
Math-15.buggy.lines	org/apache/commons/math3/util/FastMath.java#1541#            if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) {
Math-65.buggy.lines	org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java#240#        double criterion = 0;
Math-65.buggy.lines	org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java#241#        for (int i = 0; i < rows; ++i) {
Math-65.buggy.lines	org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java#242#            final double residual = residuals[i];
Math-65.buggy.lines	org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java#243#            criterion += residual * residual * residualsWeights[i];
Math-65.buggy.lines	org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java#244#        }
Math-65.buggy.lines	org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java#245#        return Math.sqrt(criterion / rows);
Math-65.buggy.lines	org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java#258#            chiSquare += residual * residual / residualsWeights[i];
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java#191#        int iter = 0;
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java#193#            ++iter;
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java#227#                    stop = checker.converged(iter, previous, current);
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java#214#        int iter = 0;
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java#217#            ++iter;
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java#223#                if (checker.converged(iter, previous, current)) {
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java#277#            if (iter % n == 0 ||
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java#158#            if (iteration > 0) {
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java#175#			++iteration;
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java#106#        int iter = 0;
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java#108#            ++iter;
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java#160#                converged = checker.converged(iter, previous, current);
Math-6.buggy.lines	org/apache/commons/math3/optim/BaseOptimizer.java#51#        iterations = new Incrementor(0, new MaxIterCallback());
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java#322#        int iter = 0;
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java#325#            ++iter;
Math-6.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java#489#                        if (checker.converged(iter, previous, current)) {
Math-98.buggy.lines	org/apache/commons/math/linear/BigMatrixImpl.java#991#        final BigDecimal[] out = new BigDecimal[v.length];
Math-98.buggy.lines	org/apache/commons/math/linear/RealMatrixImpl.java#779#        final double[] out = new double[v.length];
Math-38.buggy.lines	org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java#1660#                    throw new PathIsExploredException(); // XXX
Math-38.buggy.lines	org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java#1662#                final int iptMinus1 = ipt;
Math-38.buggy.lines	org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java#1663#                final int jptMinus1 = jpt;
Math-38.buggy.lines	org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java#1752#                throw new PathIsExploredException(); // XXX
Math-16.buggy.lines	org/apache/commons/math3/util/FastMath.java#397#      if (x < -20) {
Math-16.buggy.lines	org/apache/commons/math3/util/FastMath.java#458#      if (x < -20) {
Math-5.buggy.lines	org/apache/commons/math3/complex/Complex.java#305#            return NaN;
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#44#        setMaxEvaluations(Integer.MAX_VALUE);
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#46#        setAbsoluteAccuracy(1E-10);
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#47#        setRelativeAccuracy(1.0e-14);
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#57#        throw new UnsupportedOperationException();
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#58#    }
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#59#    public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max, final double startValue) throws MaxIterationsExceededException, FunctionEvaluationException {
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#60#        clearResult();
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#62#                        f, goalType, min, startValue, max,
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#65#    public double optimize(final UnivariateRealFunction f, final GoalType goalType, final double min, final double max) throws MaxIterationsExceededException, FunctionEvaluationException {
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#66#        return optimize(f, goalType, min, max, min + GOLDEN_SECTION * (max - min));
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#67#    }
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#94#                            UnivariateRealFunction f,
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#95#                            GoalType goalType,
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#119#        double fx = computeObjectiveValue(f, x);
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#120#        if (goalType == GoalType.MAXIMIZE) {
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#126#        int count = 0;
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#127#        while (count < maximalIterationCount) {
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#200#                double fu = computeObjectiveValue(f, u);
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#201#                if (goalType == GoalType.MAXIMIZE) {
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#238#                setResult(x, (goalType == GoalType.MAXIMIZE) ? -fx : fx, count);
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#241#            ++count;
Math-66.buggy.lines	org/apache/commons/math/optimization/univariate/BrentOptimizer.java#243#        throw new MaxIterationsExceededException(maximalIterationCount);
Math-87.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#275#            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
Math-87.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#276#                if (row == null) {
Math-87.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#278#                } else {
Math-87.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#280#                }
Math-105.buggy.lines	org/apache/commons/math/stat/regression/SimpleRegression.java#264#        return sumYY - sumXY * sumXY / sumXX;
Math-54.buggy.lines	org/apache/commons/math/dfp/Dfp.java#2319#        if (lessThan(getZero())) {
Math-24.buggy.lines	org/apache/commons/math3/optimization/univariate/BrentOptimizer.java#230#                        return current;
Math-24.buggy.lines	org/apache/commons/math3/optimization/univariate/BrentOptimizer.java#267#                return current;
Math-41.buggy.lines	org/apache/commons/math/stat/descriptive/moment/Variance.java#520#                for (int i = 0; i < weights.length; i++) {
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#134#        double p0 = 1.0;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#135#        double q1 = 1.0;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#143#            double cN = a * hPrev + b * p0;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#144#            double q2 = a * q1 + b * dPrev;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#145#            if (Double.isInfinite(cN) || Double.isInfinite(q2)) {
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#146#                double scaleFactor = 1d;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#147#                double lastScaleFactor = 1d;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#148#                final int maxPower = 5;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#149#                final double scale = FastMath.max(a,b);
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#150#                if (scale <= 0) {  // Can't scale
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#151#                    throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE, x);
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#152#                }
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#153#                for (int i = 0; i < maxPower; i++) {
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#154#                    lastScaleFactor = scaleFactor;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#155#                    scaleFactor *= scale;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#156#                    if (a != 0.0 && a > b) {
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#157#                        cN = hPrev / lastScaleFactor + (b / scaleFactor * p0);
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#158#                        q2 = q1 / lastScaleFactor + (b / scaleFactor * dPrev);
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#159#                    } else if (b != 0) {
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#160#                        cN = (a / scaleFactor * hPrev) + p0 / lastScaleFactor;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#161#                        q2 = (a / scaleFactor * q1) + dPrev / lastScaleFactor;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#162#                    }
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#163#                    if (!(Double.isInfinite(cN) || Double.isInfinite(q2))) {
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#164#                        break;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#165#                    }
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#166#                }
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#169#            final double deltaN = cN / q2 / cPrev;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#170#            hN = cPrev * deltaN;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#185#            dPrev = q1;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#186#            cPrev = cN / q2;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#187#            p0 = hPrev;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#188#            hPrev = cN;
Math-31.buggy.lines	org/apache/commons/math3/util/ContinuedFraction.java#189#            q1 = q2;
Math-92.buggy.lines	org/apache/commons/math/util/MathUtils.java#184#        long result = Math.round(binomialCoefficientDouble(n, k));
Math-92.buggy.lines	org/apache/commons/math/util/MathUtils.java#185#        if (result == Long.MAX_VALUE) {
Math-92.buggy.lines	org/apache/commons/math/util/MathUtils.java#186#            throw new ArithmeticException(
Math-92.buggy.lines	org/apache/commons/math/util/MathUtils.java#187#                "result too large to represent in a long integer");
Math-92.buggy.lines	org/apache/commons/math/util/MathUtils.java#188#        }
Math-92.buggy.lines	org/apache/commons/math/util/MathUtils.java#236#        return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);
Math-9.buggy.lines	org/apache/commons/math3/geometry/euclidean/threed/Line.java#87#        final Line reverted = new Line(zero, zero.subtract(direction));
Math-97.buggy.lines	org/apache/commons/math/analysis/BrentSolver.java#138#        if (sign >= 0) {
Math-97.buggy.lines	org/apache/commons/math/analysis/BrentSolver.java#145#        } else {
Math-34.buggy.lines	org/apache/commons/math3/genetics/ListPopulation.java#209#        return chromosomes.iterator();
Math-44.buggy.lines	org/apache/commons/math/ode/AbstractIntegrator.java#280#            resetOccurred = false;
Math-58.buggy.lines	org/apache/commons/math/optimization/fitting/GaussianFitter.java#121#        return fit(new Gaussian.Parametric(), guess);
Math-76.buggy.lines	org/apache/commons/math/linear/SingularValueDecompositionImpl.java#162#                    eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1);
Math-76.buggy.lines	org/apache/commons/math/linear/SingularValueDecompositionImpl.java#166#                for (int i = 0; i < p - 1; ++i) {
Math-76.buggy.lines	org/apache/commons/math/linear/SingularValueDecompositionImpl.java#176#                }
Math-76.buggy.lines	org/apache/commons/math/linear/SingularValueDecompositionImpl.java#178#                            wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j];
Math-76.buggy.lines	org/apache/commons/math/linear/SingularValueDecompositionImpl.java#248#                    eigenDecomposition.getV().getSubMatrix(0, p - 1, 0, p - 1);
Math-76.buggy.lines	org/apache/commons/math/linear/SingularValueDecompositionImpl.java#252#                for (int i = 0; i < p - 1; ++i) {
Math-76.buggy.lines	org/apache/commons/math/linear/SingularValueDecompositionImpl.java#261#                }
Math-76.buggy.lines	org/apache/commons/math/linear/SingularValueDecompositionImpl.java#263#                            wData[p - 1][j] = ei1[j] * mainBidiagonal[p - 1] / singularValues[j];
Math-63.buggy.lines	org/apache/commons/math/util/MathUtils.java#417#        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#69#        int[] swap  = new int[order];
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#79#            swap[r] = r;
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#82#                int isi = index[swap[i]];
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#83#                if (c[ii][ii] > c[isi][isi]) {
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#84#                    swap[r] = i;
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#90#            if (swap[r] != r) {
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#91#                int tmp = index[r];
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#92#                index[r] = index[swap[r]];
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#93#                index[swap[r]] = tmp;
Math-21.buggy.lines	org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java#128#                    c[ii][ii] -= e * e;
Math-100.buggy.lines	org/apache/commons/math/estimation/AbstractEstimator.java#166#        final int cols = problem.getAllParameters().length;
Math-100.buggy.lines	org/apache/commons/math/estimation/AbstractEstimator.java#202#        int p = problem.getAllParameters().length;
Math-100.buggy.lines	org/apache/commons/math/estimation/AbstractEstimator.java#207#        double[] errors = new double[problem.getAllParameters().length];
Math-82.buggy.lines	org/apache/commons/math/optimization/linear/SimplexSolver.java#82#            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
Math-7.buggy.lines	org/apache/commons/math3/ode/AbstractIntegrator.java#346#                currentEvent.stepAccepted(eventT, eventY);
Math-7.buggy.lines	org/apache/commons/math3/ode/AbstractIntegrator.java#347#                isLastStep = currentEvent.stop();
Math-7.buggy.lines	org/apache/commons/math3/ode/AbstractIntegrator.java#357#                    for (final EventState remaining : occuringEvents) {
Math-7.buggy.lines	org/apache/commons/math3/ode/AbstractIntegrator.java#358#                        remaining.stepAccepted(eventT, eventY);
Math-7.buggy.lines	org/apache/commons/math3/ode/AbstractIntegrator.java#359#                    }
Math-7.buggy.lines	org/apache/commons/math3/ode/AbstractIntegrator.java#363#                boolean needReset = currentEvent.reset(eventT, eventY);
Math-7.buggy.lines	org/apache/commons/math3/ode/AbstractIntegrator.java#370#                    for (final EventState remaining : occuringEvents) {
Math-7.buggy.lines	org/apache/commons/math3/ode/AbstractIntegrator.java#371#                        remaining.stepAccepted(eventT, eventY);
Math-7.buggy.lines	org/apache/commons/math3/ode/AbstractIntegrator.java#372#                    }
Math-64.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#278#            qTy(residuals);
Math-64.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#316#                            sum += jacobian[i][pj] * residuals[i];
Math-64.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#346#                determineLMParameter(oldRes, delta, diag, work1, work2, work3);
Math-64.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#365#                current = new VectorialPointValuePair(point, objective);
Math-64.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#442#                } else {
Math-64.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#443#                    if (checker.converged(getIterations(), previous, current)) {
Math-64.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#444#                        return current;
Math-64.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#445#                    }
Math-14.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/Weight.java#43#        weightMatrix = org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(dim, dim);
Math-14.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/Weight.java#44#        for (int i = 0; i < dim; i++) {
Math-14.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/Weight.java#45#            weightMatrix.setEntry(i, i, weight[i]);
Math-14.buggy.lines	org/apache/commons/math3/optim/nonlinear/vector/Weight.java#46#        }
Math-26.buggy.lines	org/apache/commons/math3/fraction/Fraction.java#181#        if (a0 > overflow) {
Math-26.buggy.lines	org/apache/commons/math3/fraction/Fraction.java#209#            if ((p2 > overflow) || (q2 > overflow)) {
Math-56.buggy.lines	org/apache/commons/math/util/MultidimensionalCounter.java#237#        int idx = 1;
Math-56.buggy.lines	org/apache/commons/math/util/MultidimensionalCounter.java#238#        while (count < index) {
Math-56.buggy.lines	org/apache/commons/math/util/MultidimensionalCounter.java#239#            count += idx;
Math-56.buggy.lines	org/apache/commons/math/util/MultidimensionalCounter.java#240#            ++idx;
Math-56.buggy.lines	org/apache/commons/math/util/MultidimensionalCounter.java#241#        }
Math-56.buggy.lines	org/apache/commons/math/util/MultidimensionalCounter.java#242#        --idx;
Math-56.buggy.lines	org/apache/commons/math/util/MultidimensionalCounter.java#243#        indices[last] = idx;
Math-85.buggy.lines	org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java#198#        if (fa * fb >= 0.0 ) {
Math-33.buggy.lines	org/apache/commons/math3/optimization/linear/SimplexTableau.java#338#            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
Math-43.buggy.lines	org/apache/commons/math/stat/descriptive/SummaryStatistics.java#158#        if (!(meanImpl instanceof Mean)) {
Math-43.buggy.lines	org/apache/commons/math/stat/descriptive/SummaryStatistics.java#161#        if (!(varianceImpl instanceof Variance)) {
Math-43.buggy.lines	org/apache/commons/math/stat/descriptive/SummaryStatistics.java#164#        if (!(geoMeanImpl instanceof GeometricMean)) {
Math-46.buggy.lines	org/apache/commons/math/complex/Complex.java#260#            return isZero ? NaN : INF;
Math-46.buggy.lines	org/apache/commons/math/complex/Complex.java#297#            return isZero ? NaN : INF;
Math-95.buggy.lines	org/apache/commons/math/distribution/FDistributionImpl.java#144#        double ret;
Math-68.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#303#                return new VectorialPointValuePair(point, objective);
Math-68.buggy.lines	org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java#419#                        return new VectorialPointValuePair(point, objective);
Math-18.buggy.lines	org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#932#                res[i] = (x[i] - boundaries[0][i]) / diff;
Math-18.buggy.lines	org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#958#                res[i] = diff * x[i] + boundaries[0][i];
Math-18.buggy.lines	org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#992#                if (x[i] < 0) {
Math-18.buggy.lines	org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#995#                if (x[i] > 1.0) {
Math-74.buggy.lines	org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java#245#          final double[] scale;
Math-74.buggy.lines	org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java#247#              scale = new double[y0.length];
Math-74.buggy.lines	org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java#248#              java.util.Arrays.fill(scale, scalAbsoluteTolerance);
Math-74.buggy.lines	org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java#250#              scale = vecAbsoluteTolerance;
Math-11.buggy.lines	org/apache/commons/math3/distribution/MultivariateNormalDistribution.java#183#        return FastMath.pow(2 * FastMath.PI, -dim / 2) *
Math-61.buggy.lines	org/apache/commons/math/distribution/PoissonDistributionImpl.java#22#import org.apache.commons.math.MathRuntimeException;
Math-61.buggy.lines	org/apache/commons/math/distribution/PoissonDistributionImpl.java#94#            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);
Math-2.buggy.lines	org/apache/commons/math3/distribution/HypergeometricDistribution.java#268#        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();
Math-80.buggy.lines	org/apache/commons/math/linear/EigenDecompositionImpl.java#1135#            int j = 4 * n - 1;
Math-23.buggy.lines	org/apache/commons/math3/optimization/univariate/BrentOptimizer.java#237#                        return best(current, previous, isMinim);
Math-23.buggy.lines	org/apache/commons/math3/optimization/univariate/BrentOptimizer.java#274#                return
Math-50.buggy.lines	org/apache/commons/math/analysis/solvers/BaseSecantSolver.java#187#                    if (x == x1) {
Math-50.buggy.lines	org/apache/commons/math/analysis/solvers/BaseSecantSolver.java#188#                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
Math-50.buggy.lines	org/apache/commons/math/analysis/solvers/BaseSecantSolver.java#189#                        f0 = computeObjectiveValue(x0);
Math-50.buggy.lines	org/apache/commons/math/analysis/solvers/BaseSecantSolver.java#190#                    }
Math-20.buggy.lines	org/apache/commons/math3/optimization/direct/CMAESOptimizer.java#921#            return
Math-83.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#292#        int start = getNumObjectiveFunctions();
Math-83.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#341#      Integer negativeVarBasicRow = getBasicRow(getNegativeDecisionVariableOffset());
Math-83.buggy.lines	org/apache/commons/math/optimization/linear/SimplexTableau.java#345#          Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);
Math-101.buggy.lines	org/apache/commons/math/complex/ComplexFormat.java#377#        if (
Math-12.buggy.lines	org/apache/commons/math3/random/BitsStreamGenerator.java#29#    implements RandomGenerator {
Math-62.buggy.lines	org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java#146#        return optimize(f, goal, min, max, 0);
Math-62.buggy.lines	org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java#160#                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
Math-62.buggy.lines	org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java#161#                final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
Math-62.buggy.lines	org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java#162#                optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
Math-29.buggy.lines	org/apache/commons/math3/linear/OpenMapRealVector.java#349#        Iterator iter = entries.iterator();
Math-29.buggy.lines	org/apache/commons/math3/linear/OpenMapRealVector.java#350#        while (iter.hasNext()) {
Math-29.buggy.lines	org/apache/commons/math3/linear/OpenMapRealVector.java#351#            iter.advance();
Math-29.buggy.lines	org/apache/commons/math3/linear/OpenMapRealVector.java#352#            res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));
Math-59.buggy.lines	org/apache/commons/math/util/FastMath.java#3482#        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);
Math-77.buggy.lines	org/apache/commons/math/linear/ArrayRealVector.java#721#            max += Math.max(max, Math.abs(a));
Math-77.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#498#    public double getLInfNorm() {
Math-77.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#499#        double max = 0;
Math-77.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#500#        Iterator iter = entries.iterator();
Math-77.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#501#        while (iter.hasNext()) {
Math-77.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#502#            iter.advance();
Math-77.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#503#            max += iter.value();
Math-77.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#504#        }
Math-77.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#505#        return max;
Math-77.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#506#    }
Math-96.buggy.lines	org/apache/commons/math/complex/Complex.java#258#                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); 
Math-8.buggy.lines	org/apache/commons/math3/distribution/DiscreteDistribution.java#181#    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
Math-8.buggy.lines	org/apache/commons/math3/distribution/DiscreteDistribution.java#187#        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
Math-35.buggy.lines	org/apache/commons/math3/genetics/ElitisticListPopulation.java#51#        this.elitismRate = elitismRate;
Math-35.buggy.lines	org/apache/commons/math3/genetics/ElitisticListPopulation.java#65#        this.elitismRate = elitismRate;
Math-72.buggy.lines	org/apache/commons/math/analysis/solvers/BrentSolver.java#115#            setResult(yMin, 0);
Math-72.buggy.lines	org/apache/commons/math/analysis/solvers/BrentSolver.java#127#            setResult(yMax, 0);
Math-30.buggy.lines	org/apache/commons/math3/stat/inference/MannWhitneyUTest.java#173#        final int n1n2prod = n1 * n2;
Math-40.buggy.lines	org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java#235#                targetY = -REDUCTION_FACTOR * yB;
Math-40.buggy.lines	org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java#238#                targetY = -REDUCTION_FACTOR * yA;
Math-93.buggy.lines	org/apache/commons/math/util/MathUtils.java#345#        long result = Math.round(factorialDouble(n));
Math-93.buggy.lines	org/apache/commons/math/util/MathUtils.java#346#        if (result == Long.MAX_VALUE) {
Math-104.buggy.lines	org/apache/commons/math/special/Gamma.java#37#    private static final double DEFAULT_EPSILON = 10e-9;
Math-86.buggy.lines	org/apache/commons/math/linear/CholeskyDecompositionImpl.java#114#            if (lTData[i][i] < absolutePositivityThreshold) {
Math-86.buggy.lines	org/apache/commons/math/linear/CholeskyDecompositionImpl.java#115#                throw new NotPositiveDefiniteMatrixException();
Math-86.buggy.lines	org/apache/commons/math/linear/CholeskyDecompositionImpl.java#116#            }
Math-55.buggy.lines	org/apache/commons/math/geometry/Vector3D.java#473#      return new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);
Math-49.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#345#        Iterator iter = res.entries.iterator();
Math-49.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#358#        Iterator iter = res.entries.iterator();
Math-49.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#370#        Iterator iter = res.entries.iterator();
Math-49.buggy.lines	org/apache/commons/math/linear/OpenMapRealVector.java#383#        Iterator iter = res.entries.iterator();
Math-67.buggy.lines	org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java#92#        return optimizer.getFunctionValue();
Math-67.buggy.lines	org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java#97#        return optimizer.getResult();
Time-5.buggy.lines	org/joda/time/Period.java#1628#            years = FieldUtils.safeAdd(years, months / 12);
Time-5.buggy.lines	org/joda/time/Period.java#1629#            months = months % 12;
Time-5.buggy.lines	org/joda/time/Period.java#1630#            if (years != 0) {
Time-5.buggy.lines	org/joda/time/Period.java#1631#                result = result.withYears(years);
Time-5.buggy.lines	org/joda/time/Period.java#1633#            if (months != 0) {
Time-5.buggy.lines	org/joda/time/Period.java#1634#                result = result.withMonths(months);
Time-16.buggy.lines	org/joda/time/format/DateTimeFormatter.java#709#            instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);
Time-9.buggy.lines	org/joda/time/DateTimeZone.java#263#            int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);
Time-9.buggy.lines	org/joda/time/DateTimeZone.java#265#                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);
Time-9.buggy.lines	org/joda/time/DateTimeZone.java#267#                minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);
Time-21.buggy.lines	org/joda/time/tz/DefaultNameProvider.java#72#              byNameKeyCache.put(setLoc[2], new String[] {setLoc[2], setLoc[1]});
Time-21.buggy.lines	org/joda/time/tz/DefaultNameProvider.java#76#              if (setLoc[2].equals(setLoc[4])) {
Time-21.buggy.lines	org/joda/time/tz/DefaultNameProvider.java#77#                  byNameKeyCache.put(setLoc[4] + "-Summer", new String[] {setLoc[4], setLoc[3]});
Time-21.buggy.lines	org/joda/time/tz/DefaultNameProvider.java#79#                  byNameKeyCache.put(setLoc[4], new String[] {setLoc[4], setLoc[3]});
Time-21.buggy.lines	org/joda/time/tz/DefaultNameProvider.java#80#              }
Time-21.buggy.lines	org/joda/time/tz/DefaultNameProvider.java#81#                break;
Time-13.buggy.lines	org/joda/time/format/PeriodFormatterBuilder.java#1098#                sum = Math.max(sum, 4);
Time-10.buggy.lines	org/joda/time/base/BaseSingleFieldPeriod.java#104#        int[] values = chrono.get(zeroInstance, chrono.set(start, 0L), chrono.set(end, 0L));
Time-22.buggy.lines	org/joda/time/base/BasePeriod.java#222#        this(duration, null, null);
Time-19.buggy.lines	org/joda/time/DateTimeZone.java#900#        } else if (offsetLocal > 0) {
Time-1.buggy.lines	org/joda/time/Partial.java#221#                } else if (compare == 0) {
Time-1.buggy.lines	org/joda/time/field/UnsupportedDurationField.java#227#        if (durationField.isSupported()) {
Time-1.buggy.lines	org/joda/time/field/UnsupportedDurationField.java#228#            return 1;
Time-1.buggy.lines	org/joda/time/field/UnsupportedDurationField.java#229#        }
Time-12.buggy.lines	org/joda/time/LocalDate.java#212#            yearOfEra,
Time-12.buggy.lines	org/joda/time/LocalDateTime.java#201#            yearOfEra,
Time-20.buggy.lines	org/joda/time/format/DateTimeFormatterBuilder.java#2544#                    bucket.setZone(DateTimeZone.forID(id));
Time-20.buggy.lines	org/joda/time/format/DateTimeFormatterBuilder.java#2545#                    return position + id.length();
Time-8.buggy.lines	org/joda/time/DateTimeZone.java#279#        if (minutesOffset < 0 || minutesOffset > 59) {
Time-8.buggy.lines	org/joda/time/DateTimeZone.java#286#                minutesOffset = hoursInMinutes - minutesOffset;
Time-17.buggy.lines	org/joda/time/DateTimeZone.java#1167#        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
Time-17.buggy.lines	org/joda/time/DateTimeZone.java#1168#        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
Time-17.buggy.lines	org/joda/time/DateTimeZone.java#1169#        if (instantBefore == instantAfter) {
Time-17.buggy.lines	org/joda/time/DateTimeZone.java#1174#        long local = convertUTCToLocal(instant);
Time-17.buggy.lines	org/joda/time/DateTimeZone.java#1175#        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
Time-4.buggy.lines	org/joda/time/Partial.java#464#            Partial newPartial = new Partial(iChronology, newTypes, newValues);
Time-26.buggy.lines	org/joda/time/chrono/ZonedChronology.java#436#               return iZone.convertLocalToUTC(localInstant, false);
Time-26.buggy.lines	org/joda/time/chrono/ZonedChronology.java#448#               return iZone.convertLocalToUTC(localInstant, false);
Time-26.buggy.lines	org/joda/time/chrono/ZonedChronology.java#460#                return iZone.convertLocalToUTC(localInstant, false);
Time-26.buggy.lines	org/joda/time/chrono/ZonedChronology.java#467#            long result = iZone.convertLocalToUTC(localInstant, false);
Time-26.buggy.lines	org/joda/time/chrono/ZonedChronology.java#481#            return iZone.convertLocalToUTC(localInstant, false);
Time-26.buggy.lines	org/joda/time/chrono/ZonedChronology.java#528#                return iZone.convertLocalToUTC(localInstant, false);
Time-26.buggy.lines	org/joda/time/chrono/ZonedChronology.java#540#                return iZone.convertLocalToUTC(localInstant, false);
Time-7.buggy.lines	org/joda/time/format/DateTimeFormatter.java#710#        int defaultYear = chrono.year().get(instantLocal);
Time-23.buggy.lines	org/joda/time/DateTimeZone.java#572#            map.put("IET", "America/Indianapolis");
Time-23.buggy.lines	org/joda/time/DateTimeZone.java#575#            map.put("AGT", "America/Buenos_Aires");
Time-23.buggy.lines	org/joda/time/DateTimeZone.java#577#            map.put("WET", "Europe/London");
Time-23.buggy.lines	org/joda/time/DateTimeZone.java#578#            map.put("ECT", "Europe/Paris");
Time-23.buggy.lines	org/joda/time/DateTimeZone.java#581#            map.put("EET", "Europe/Bucharest");
Time-23.buggy.lines	org/joda/time/DateTimeZone.java#583#            map.put("MET", "Asia/Tehran");
Time-23.buggy.lines	org/joda/time/DateTimeZone.java#586#            map.put("IST", "Asia/Calcutta");
Time-23.buggy.lines	org/joda/time/DateTimeZone.java#588#            map.put("VST", "Asia/Saigon");
Time-2.buggy.lines	org/joda/time/Partial.java#218#                if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false)) {
Time-11.buggy.lines	org/joda/time/tz/ZoneInfoCompiler.java#68#    static ThreadLocal<Boolean> cVerbose = new ThreadLocal<Boolean>();
Time-11.buggy.lines	org/joda/time/tz/ZoneInfoCompiler.java#69#    static {
Time-11.buggy.lines	org/joda/time/tz/ZoneInfoCompiler.java#70#        cVerbose.set(Boolean.FALSE);
Time-11.buggy.lines	org/joda/time/tz/ZoneInfoCompiler.java#71#    }
Lang-42.buggy.lines	org/apache/commons/lang/Entities.java#828#            char c = str.charAt(i);
Lang-42.buggy.lines	org/apache/commons/lang/Entities.java#831#                if (c > 0x7F) {
Lang-32.buggy.lines	org/apache/commons/lang3/builder/HashCodeBuilder.java#104#    private static final ThreadLocal<Set<IDKey>> REGISTRY = new ThreadLocal<Set<IDKey>>() {
Lang-32.buggy.lines	org/apache/commons/lang3/builder/HashCodeBuilder.java#105#        @Override
Lang-32.buggy.lines	org/apache/commons/lang3/builder/HashCodeBuilder.java#106#        protected Set<IDKey> initialValue() {
Lang-32.buggy.lines	org/apache/commons/lang3/builder/HashCodeBuilder.java#107#            return new HashSet<IDKey>();
Lang-32.buggy.lines	org/apache/commons/lang3/builder/HashCodeBuilder.java#108#        }
Lang-32.buggy.lines	org/apache/commons/lang3/builder/HashCodeBuilder.java#109#    };
Lang-32.buggy.lines	org/apache/commons/lang3/builder/HashCodeBuilder.java#152#        return getRegistry().contains(new IDKey(value));
Lang-32.buggy.lines	org/apache/commons/lang3/builder/HashCodeBuilder.java#538#        getRegistry().remove(new IDKey(value));
Lang-15.buggy.lines	org/apache/commons/lang3/reflect/TypeUtils.java#219#        for (Map.Entry<TypeVariable<?>, Type> entry : toTypeVarAssigns.entrySet()) {
Lang-15.buggy.lines	org/apache/commons/lang3/reflect/TypeUtils.java#220#            Type toTypeArg = entry.getValue();
Lang-15.buggy.lines	org/apache/commons/lang3/reflect/TypeUtils.java#221#            Type fromTypeArg = fromTypeVarAssigns.get(entry.getKey());
Lang-15.buggy.lines	org/apache/commons/lang3/reflect/TypeUtils.java#675#        if (cls.getTypeParameters().length > 0 || toClass.equals(cls)) {
Lang-57.buggy.lines	org/apache/commons/lang/LocaleUtils.java#223#        return cAvailableLocaleSet.contains(locale);
Lang-27.buggy.lines	org/apache/commons/lang3/math/NumberUtils.java#479#                if (expPos < decPos) {
Lang-60.buggy.lines	org/apache/commons/lang/text/StrBuilder.java#1673#        for (int i = 0; i < thisBuf.length; i++) {
Lang-60.buggy.lines	org/apache/commons/lang/text/StrBuilder.java#1730#        for (int i = startIndex; i < thisBuf.length; i++) {
Lang-10.buggy.lines	org/apache/commons/lang3/time/FastDateParser.java#304#        boolean wasWhite= false;
Lang-10.buggy.lines	org/apache/commons/lang3/time/FastDateParser.java#307#            if(Character.isWhitespace(c)) {
Lang-10.buggy.lines	org/apache/commons/lang3/time/FastDateParser.java#308#                if(!wasWhite) {
Lang-10.buggy.lines	org/apache/commons/lang3/time/FastDateParser.java#309#                    wasWhite= true;
Lang-10.buggy.lines	org/apache/commons/lang3/time/FastDateParser.java#310#                    regex.append("\\s*+");
Lang-10.buggy.lines	org/apache/commons/lang3/time/FastDateParser.java#311#                }
Lang-10.buggy.lines	org/apache/commons/lang3/time/FastDateParser.java#312#                continue;
Lang-10.buggy.lines	org/apache/commons/lang3/time/FastDateParser.java#313#            }
Lang-10.buggy.lines	org/apache/commons/lang3/time/FastDateParser.java#314#            wasWhite= false;
Lang-22.buggy.lines	org/apache/commons/lang3/math/Fraction.java#584#        if (Math.abs(u) <= 1 || Math.abs(v) <= 1) {
Lang-19.buggy.lines	org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java#40#        if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
Lang-19.buggy.lines	org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java#54#            while(input.charAt(end) != ';') 
Lang-19.buggy.lines	org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java#80#            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
Lang-6.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#95#                pos += Character.charCount(Character.codePointAt(input, pos));
Lang-58.buggy.lines	org/apache/commons/lang/math/NumberUtils.java#454#                        && isDigits(numeric.substring(1))
Lang-58.buggy.lines	org/apache/commons/lang/math/NumberUtils.java#455#                        && (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {
Lang-34.buggy.lines	org/apache/commons/lang3/builder/ToStringStyle.java#148#        return REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();
Lang-34.buggy.lines	org/apache/commons/lang3/builder/ToStringStyle.java#164#        return m.containsKey(value);
Lang-21.buggy.lines	org/apache/commons/lang3/time/DateUtils.java#265#                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#306#            days += 31;
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#318#        milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#319#        seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#320#        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#321#        hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#322#        days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#323#        months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#324#        years -= reduceAndCorrect(start, end, Calendar.YEAR, years);
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#431#    }
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#432#    static int reduceAndCorrect(Calendar start, Calendar end, int field, int difference) {
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#433#        end.add( field, -1 * difference );
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#434#        int endValue = end.get(field);
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#435#        int startValue = start.get(field);
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#436#        if (endValue < startValue) {
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#437#            int newdiff = startValue - endValue;
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#438#            end.add( field, newdiff );
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#439#            return newdiff;
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#440#        } else {
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#441#            return 0;
Lang-63.buggy.lines	org/apache/commons/lang/time/DurationFormatUtils.java#442#        }
Lang-24.buggy.lines	org/apache/commons/lang3/math/NumberUtils.java#1413#                return foundDigit && !hasExp;
Lang-16.buggy.lines	org/apache/commons/lang3/math/NumberUtils.java#458#        if (str.startsWith("0x") || str.startsWith("-0x")) {
Lang-41.buggy.lines	org/apache/commons/lang/ClassUtils.java#203#        return out;
Lang-41.buggy.lines	org/apache/commons/lang/ClassUtils.java#245#        if (className == null) {
Lang-7.buggy.lines	org/apache/commons/lang3/math/NumberUtils.java#452#        if (str.startsWith("--")) {
Lang-7.buggy.lines	org/apache/commons/lang3/math/NumberUtils.java#453#            return null;
Lang-7.buggy.lines	org/apache/commons/lang3/math/NumberUtils.java#454#        }
Lang-46.buggy.lines	org/apache/commons/lang/StringEscapeUtils.java#86#        return escapeJavaStyleString(str, false);
Lang-46.buggy.lines	org/apache/commons/lang/StringEscapeUtils.java#102#        escapeJavaStyleString(out, str, false);
Lang-46.buggy.lines	org/apache/commons/lang/StringEscapeUtils.java#127#        return escapeJavaStyleString(str, true);
Lang-46.buggy.lines	org/apache/commons/lang/StringEscapeUtils.java#143#        escapeJavaStyleString(out, str, true);
Lang-46.buggy.lines	org/apache/commons/lang/StringEscapeUtils.java#154#    private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {
Lang-46.buggy.lines	org/apache/commons/lang/StringEscapeUtils.java#160#            escapeJavaStyleString(writer, str, escapeSingleQuotes);
Lang-46.buggy.lines	org/apache/commons/lang/StringEscapeUtils.java#178#    private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
Lang-36.buggy.lines	org/apache/commons/lang3/math/NumberUtils.java#491#        if (!Character.isDigit(lastChar)) {
Lang-18.buggy.lines	org/apache/commons/lang3/time/FastDateFormat.java#495#                if (tokenLen >= 4) {
Lang-18.buggy.lines	org/apache/commons/lang3/time/FastDateFormat.java#496#                    rule = selectNumberRule(Calendar.YEAR, tokenLen);
Lang-18.buggy.lines	org/apache/commons/lang3/time/FastDateFormat.java#497#                } else {
Lang-53.buggy.lines	org/apache/commons/lang/time/DateUtils.java#645#            }
Lang-53.buggy.lines	org/apache/commons/lang/time/DateUtils.java#654#            }
Lang-61.buggy.lines	org/apache/commons/lang/text/StrBuilder.java#1776#        int len = thisBuf.length - strLen;
Lang-26.buggy.lines	org/apache/commons/lang3/time/FastDateFormat.java#820#        Calendar c = new GregorianCalendar(mTimeZone);
Lang-56.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#140#    private Rule[] mRules;
Lang-56.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#144#    private int mMaxLengthEstimate;
Lang-33.buggy.lines	org/apache/commons/lang3/ClassUtils.java#910#            classes[i] = array[i].getClass();
Lang-30.buggy.lines	org/apache/commons/lang3/StringUtils.java#1443#    public static boolean containsAny(CharSequence cs, char[] searchChars) {
Lang-30.buggy.lines	org/apache/commons/lang3/StringUtils.java#1455#                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {
Lang-30.buggy.lines	org/apache/commons/lang3/StringUtils.java#1457#                        if (searchChars[j + 1] == cs.charAt(i + 1)) {
Lang-30.buggy.lines	org/apache/commons/lang3/StringUtils.java#1497#    public static boolean containsAny(CharSequence cs, String searchChars) {
Lang-30.buggy.lines	org/apache/commons/lang3/StringUtils.java#1576#            if (searchChars.indexOf(ch) < 0) {
Lang-40.buggy.lines	org/apache/commons/lang/StringUtils.java#1048#        return contains(str.toUpperCase(), searchStr.toUpperCase());
Lang-1.buggy.lines	org/apache/commons/lang3/math/NumberUtils.java#468#            if (hexDigits > 16) { // too many for Long
Lang-1.buggy.lines	org/apache/commons/lang3/math/NumberUtils.java#471#            if (hexDigits > 8) { // too many for an int
Lang-17.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#83#        int len = Character.codePointCount(input, 0, input.length());
Lang-17.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#90#            else {
Lang-17.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#94#                    if (pos < len - 2) {
Lang-17.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#96#                    } else {
Lang-17.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#97#                        pos++;
Lang-17.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#98#                    }
Lang-17.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#99#                }
Lang-17.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#100#                pos--;
Lang-17.buggy.lines	org/apache/commons/lang3/text/translate/CharSequenceTranslator.java#102#            pos++;
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#74#        {"\u00CB", "&Ecirc;"}, // Ê - uppercase E, circumflex accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#75#        {"\u00CC", "&Euml;"}, // Ë - uppercase E, umlaut
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#76#        {"\u00CD", "&Igrave;"}, // Ì - uppercase I, grave accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#77#        {"\u00CE", "&Iacute;"}, // Í - uppercase I, acute accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#78#        {"\u00CF", "&Icirc;"}, // Î - uppercase I, circumflex accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#79#        {"\u00D0", "&Iuml;"}, // Ï - uppercase I, umlaut
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#80#        {"\u00D1", "&ETH;"}, // Ð - uppercase Eth, Icelandic
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#81#        {"\u00D2", "&Ntilde;"}, // Ñ - uppercase N, tilde
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#82#        {"\u00D3", "&Ograve;"}, // Ò - uppercase O, grave accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#83#        {"\u00D4", "&Oacute;"}, // Ó - uppercase O, acute accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#84#        {"\u00D5", "&Ocirc;"}, // Ô - uppercase O, circumflex accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#85#        {"\u00D6", "&Otilde;"}, // Õ - uppercase O, tilde
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#86#        {"\u00D7", "&Ouml;"}, // Ö - uppercase O, umlaut
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#87#        {"\u00D8", "&times;"}, // multiplication sign
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#88#        {"\u00D9", "&Oslash;"}, // Ø - uppercase O, slash
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#89#        {"\u00DA", "&Ugrave;"}, // Ù - uppercase U, grave accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#90#        {"\u00DB", "&Uacute;"}, // Ú - uppercase U, acute accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#91#        {"\u00DC", "&Ucirc;"}, // Û - uppercase U, circumflex accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#92#        {"\u00DD", "&Uuml;"}, // Ü - uppercase U, umlaut
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#93#        {"\u00DE", "&Yacute;"}, // Ý - uppercase Y, acute accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#94#        {"\u00DF", "&THORN;"}, // Þ - uppercase THORN, Icelandic
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#95#        {"\u00E0", "&szlig;"}, // ß - lowercase sharps, German
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#96#        {"\u00E1", "&agrave;"}, // à - lowercase a, grave accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#97#        {"\u00E2", "&aacute;"}, // á - lowercase a, acute accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#98#        {"\u00E3", "&acirc;"}, // â - lowercase a, circumflex accent
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#99#        {"\u00E4", "&atilde;"}, // ã - lowercase a, tilde
Lang-25.buggy.lines	org/apache/commons/lang3/text/translate/EntityArrays.java#100#        {"\u00E5", "&auml;"}, // ä - lowercase a, umlaut
Lang-8.buggy.lines	org/apache/commons/lang3/time/FastDatePrinter.java#1098#        private final TimeZone zone;
Lang-8.buggy.lines	org/apache/commons/lang3/time/FastDatePrinter.java#1112#            zone = timeZone;
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#285#        if (locale != null) {
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#286#            key = new Pair(key, locale);
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#292#            if (locale == null) {
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#293#                locale = Locale.getDefault();
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#294#            }
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#465#        if (locale != null) {
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#466#            key = new Pair(key, locale);
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#471#            if (locale == null) {
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#472#                locale = Locale.getDefault();
Lang-50.buggy.lines	org/apache/commons/lang/time/FastDateFormat.java#473#            }
Lang-20.buggy.lines	org/apache/commons/lang3/StringUtils.java#3298#        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);
Lang-20.buggy.lines	org/apache/commons/lang3/StringUtils.java#3383#        StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());
Lang-35.buggy.lines	org/apache/commons/lang3/ArrayUtils.java#3295#            type = Object.class;
Lang-35.buggy.lines	org/apache/commons/lang3/ArrayUtils.java#3574#            return (T[]) new Object[] { null };
Lang-29.buggy.lines	org/apache/commons/lang3/SystemUtils.java#1672#    static float toJavaVersionInt(String version) {
Lang-4.buggy.lines	org/apache/commons/lang3/text/translate/LookupTranslator.java#31#    private final HashMap<CharSequence, CharSequence> lookupMap;
Lang-4.buggy.lines	org/apache/commons/lang3/text/translate/LookupTranslator.java#46#        lookupMap = new HashMap<CharSequence, CharSequence>();
Lang-4.buggy.lines	org/apache/commons/lang3/text/translate/LookupTranslator.java#51#                this.lookupMap.put(seq[0], seq[1]);
Lang-4.buggy.lines	org/apache/commons/lang3/text/translate/LookupTranslator.java#77#            final CharSequence result = lookupMap.get(subSeq);
Lang-59.buggy.lines	org/apache/commons/lang/text/StrBuilder.java#884#                str.getChars(0, strLen, buffer, size);
Mockito-1.buggy.lines	org/mockito/internal/invocation/InvocationMatcher.java#123#            throw new UnsupportedOperationException();
Mockito-31.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java#60#			return invocation.getMethod().getName() + "()";
Mockito-24.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java#76#            return 1;
Mockito-38.buggy.lines	org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java#48#        return StringDescription.toString(m).equals(arg.toString());
Mockito-8.buggy.lines	org/mockito/internal/util/reflection/GenericMetadataSupport.java#79#            } else {
Mockito-16.buggy.lines	org/mockito/Mockito.java#827#        return MOCKITO_CORE.mock(classToMock, mockSettings);
Mockito-16.buggy.lines	org/mockito/Mockito.java#899#                .defaultAnswer(CALLS_REAL_METHODS)); 
Mockito-16.buggy.lines	org/mockito/internal/MockitoCore.java#32#    public <T> T mock(Class<T> classToMock, MockSettings mockSettings, boolean shouldResetOngoingStubbing) { return mock(classToMock, mockSettings); }
Mockito-16.buggy.lines	org/mockito/internal/MockitoCore.java#33#    public <T> T mock(Class<T> classToMock, MockSettings mockSettings) {
Mockito-21.buggy.lines	org/mockito/internal/creation/instance/ConstructorInstantiator.java#17#        return withOuterClass(cls);
Mockito-21.buggy.lines	org/mockito/internal/creation/instance/ConstructorInstantiator.java#20#    private <T> T withOuterClass(Class<T> cls) {
Mockito-21.buggy.lines	org/mockito/internal/creation/instance/ConstructorInstantiator.java#24#            Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass());
Mockito-21.buggy.lines	org/mockito/internal/creation/instance/ConstructorInstantiator.java#25#            return c.newInstance(outerClassInstance);
Mockito-13.buggy.lines	org/mockito/internal/MockHandler.java#77#            if (verificationMode instanceof MockAwareVerificationMode && ((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {                
Mockito-28.buggy.lines	org/mockito/internal/configuration/DefaultInjectionEngine.java#93#            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
Mockito-34.buggy.lines	org/mockito/internal/invocation/InvocationMatcher.java#106#            if (m instanceof CapturesArguments) {
Mockito-4.buggy.lines	org/mockito/exceptions/Reporter.java#424#                "But found this interaction on mock '" + undesired.getMock() + "':",
Mockito-4.buggy.lines	org/mockito/exceptions/Reporter.java#434#                "But found this interaction on mock '" + undesired.getMock() + "':",
Mockito-19.buggy.lines	org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java#114#            Object injected = mockCandidateFilter.filterCandidate(mocks, field, instance).thenInject();
Mockito-19.buggy.lines	org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java#23#    public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {
Mockito-19.buggy.lines	org/mockito/internal/configuration/injection/filter/MockCandidateFilter.java#15#            Object fieldInstance
Mockito-19.buggy.lines	org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java#23#			Field field, Object fieldInstance) {
Mockito-19.buggy.lines	org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java#31#			return next.filterCandidate(mockNameMatches, field,
Mockito-19.buggy.lines	org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java#43#		return next.filterCandidate(mocks, field, fieldInstance);
Mockito-19.buggy.lines	org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java#20#    public OngoingInjecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {
Mockito-19.buggy.lines	org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java#28#        return next.filterCandidate(mockTypeMatches, field, fieldInstance);
Mockito-10.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#71#                newDeepStubMock(returnTypeGenericMetadata),
Mockito-10.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#87#    private Object newDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata) {
Mockito-10.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#90#                withSettingsUsing(returnTypeGenericMetadata)
Mockito-10.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#94#    private MockSettings withSettingsUsing(GenericMetadataSupport returnTypeGenericMetadata) {
Mockito-10.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#99#        return mockSettings.serializable()
Mockito-22.buggy.lines	org/mockito/internal/matchers/Equality.java#13#        if (o1 == null || o2 == null) {
Mockito-27.buggy.lines	org/mockito/internal/util/MockUtil.java#64#        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
Mockito-27.buggy.lines	org/mockito/internal/util/MockUtil.java#65#        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
Mockito-32.buggy.lines	org/mockito/internal/configuration/SpyAnnotationEngine.java#49#                        field.set(testClass, Mockito.spy(instance));
Mockito-5.buggy.lines	org/mockito/internal/verification/VerificationOverTimeImpl.java#91#            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {
Mockito-35.buggy.lines	org/mockito/Matchers.java#362#        return reportMatcher(new InstanceOf(clazz)).<T>returnNull();
Mockito-35.buggy.lines	org/mockito/Matchers.java#479#        return reportMatcher(new Equals(value)).<T>returnNull();
Mockito-35.buggy.lines	org/mockito/Matchers.java#516#        return reportMatcher(new Same(value)).<T>returnNull();
Mockito-29.buggy.lines	org/mockito/internal/matchers/Same.java#29#        description.appendText(wanted.toString());
Mockito-20.buggy.lines	org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java#34#            mockInstance = classInstantiator.instantiate(mockedProxyType);
Mockito-20.buggy.lines	org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java#45#                    "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
Mockito-17.buggy.lines	org/mockito/internal/creation/MockSettingsImpl.java#22#        return this.extraInterfaces(java.io.Serializable.class);
Mockito-17.buggy.lines	org/mockito/internal/creation/MockSettingsImpl.java#74#        return extraInterfaces != null && java.util.Arrays.asList(extraInterfaces).contains(java.io.Serializable.class);
Mockito-25.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#53#        return getMock(invocation);
Mockito-25.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#56#    private Object getMock(InvocationOnMock invocation) throws Throwable {
Mockito-25.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#68#        return recordDeepStubMock(invocation, container);
Mockito-25.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#81#    private Object recordDeepStubMock(InvocationOnMock invocation, InvocationContainerImpl container) {
Mockito-25.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#82#        Class<?> clz = invocation.getMethod().getReturnType();
Mockito-25.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#83#        final Object mock = org.mockito.Mockito.mock(clz, this);
Mockito-30.buggy.lines	org/mockito/exceptions/Reporter.java#438#    public void smartNullPointerException(Location location) {
Mockito-30.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java#56#            new Reporter().smartNullPointerException(location);
Mockito-33.buggy.lines	org/mockito/internal/invocation/InvocationMatcher.java#99#        return m1.equals(m2);
Mockito-3.buggy.lines	org/mockito/internal/invocation/InvocationMatcher.java#127#            for (int position = indexOfVararg; position < matchers.size(); position++) {
Mockito-3.buggy.lines	org/mockito/internal/invocation/InvocationMatcher.java#128#                Matcher m = matchers.get(position);
Mockito-3.buggy.lines	org/mockito/internal/invocation/InvocationMatcher.java#130#                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);
Mockito-26.buggy.lines	org/mockito/internal/util/Primitives.java#66#        primitiveValues.put(double.class, 0);
Mockito-14.buggy.lines	org/mockito/internal/MockitoCore.java#73#        mockingProgress.verificationStarted(mode);
Mockito-23.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#44#    private MockitoCore mockitoCore = new MockitoCore();
Mockito-23.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#45#    private ReturnsEmptyValues delegate = new ReturnsEmptyValues();
Mockito-23.buggy.lines	org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java#114#        container.addAnswer(new Answer<Object>() {
Mockito-11.buggy.lines	org/mockito/internal/creation/DelegatingMethod.java#60#        return 1;
Mockito-6.buggy.lines	org/mockito/Matchers.java#122#        return reportMatcher(Any.ANY).returnFalse();
Mockito-6.buggy.lines	org/mockito/Matchers.java#137#        return reportMatcher(Any.ANY).returnZero();
Mockito-6.buggy.lines	org/mockito/Matchers.java#152#        return reportMatcher(Any.ANY).returnChar();
Mockito-6.buggy.lines	org/mockito/Matchers.java#167#        return reportMatcher(Any.ANY).returnZero();
Mockito-6.buggy.lines	org/mockito/Matchers.java#182#        return reportMatcher(Any.ANY).returnZero();
Mockito-6.buggy.lines	org/mockito/Matchers.java#197#        return reportMatcher(Any.ANY).returnZero();
Mockito-6.buggy.lines	org/mockito/Matchers.java#212#        return reportMatcher(Any.ANY).returnZero();
Mockito-6.buggy.lines	org/mockito/Matchers.java#227#        return reportMatcher(Any.ANY).returnZero();
Mockito-6.buggy.lines	org/mockito/Matchers.java#244#        return (T) reportMatcher(Any.ANY).returnNull();
Mockito-6.buggy.lines	org/mockito/Matchers.java#292#        return (T) reportMatcher(Any.ANY).returnFor(clazz);
Mockito-6.buggy.lines	org/mockito/Matchers.java#309#        return (T) anyObject();
Mockito-6.buggy.lines	org/mockito/Matchers.java#324#        return reportMatcher(Any.ANY).returnString();
Mockito-6.buggy.lines	org/mockito/Matchers.java#339#        return reportMatcher(Any.ANY).returnList();
Mockito-6.buggy.lines	org/mockito/Matchers.java#358#        return (List) reportMatcher(Any.ANY).returnList();
Mockito-6.buggy.lines	org/mockito/Matchers.java#373#        return reportMatcher(Any.ANY).returnSet();
Mockito-6.buggy.lines	org/mockito/Matchers.java#392#        return (Set) reportMatcher(Any.ANY).returnSet();
Mockito-6.buggy.lines	org/mockito/Matchers.java#407#        return reportMatcher(Any.ANY).returnMap();
Mockito-6.buggy.lines	org/mockito/Matchers.java#427#        return reportMatcher(Any.ANY).returnMap();
Mockito-6.buggy.lines	org/mockito/Matchers.java#442#        return reportMatcher(Any.ANY).returnList();
Mockito-6.buggy.lines	org/mockito/Matchers.java#461#        return (Collection) reportMatcher(Any.ANY).returnList();
